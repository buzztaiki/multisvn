#!/usr/bin/env python

from optparse import OptionParser
from ConfigParser import ConfigParser
import os, subprocess

def get_option(config, option):
    """
    Return option value for 'multisvn' section from config.
    """
    if config.has_option('multisvn', option):
        return config.get('multisvn', option)
    else:
        return None
    
def find_dotsvn(d):
    """
    Find '.svn' directory from d upto ancestor directories.
    """
    p = os.path.dirname(d)
    dotsvn = os.path.join(d, '.svn')
    if d == p:
        return None
    elif os.path.exists(dotsvn):
        return dotsvn
    else:
        return find_dotsvn(p)
    
def is_svn17(dotsvn):
    """
    Return true if dotsvn version is 1.7.
    """
    return os.path.exists(os.path.join(dotsvn, 'wc.db'))

def guess_svn(config, dotsvn):
    """
    Return subversion executable that is guessed by config and dotsvn version.
    """
    svn = os.path.expanduser(get_option(config, 'svn')) or '/usr/bin/svn'
    svn16 = os.path.expanduser(get_option(config, 'svn16')) or svn
    svn17 = os.path.expanduser(get_option(config, 'svn17')) or svn
    if not dotsvn:
        return svn
    if is_svn17(dotsvn):
        return svn17
    else:
        return svn16


config = ConfigParser()
config.read(os.path.expanduser('~/.subversion/config'))

svn = guess_svn(config, find_dotsvn(os.getcwd()))
os.sys.exit(subprocess.call([svn] + os.sys.argv[1:]))
